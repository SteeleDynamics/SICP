; cons constructor procedure
(define (cons x y)
  (define (set-x! v) (set! x v))
  (define (set-y! v) (set! y v))
  (define (dispatch m)
    (cond ((eq? m 'car) x)
          ((eq? m 'cdr) y)
          ((eq? m 'set-car!) set-x!)
          ((eq? m 'set-cdr!) set-y!)
          (else (error "Undefined operation -- CONS" m))))
  dispatch)

; car selector procedure
(define (car z) (z 'car))

; cdr selector procedure
(define (cdr z) (z 'cdr))

; set-car! mutator procedure
(define (set-car! z new-value)
  ((z 'set-car!) new-value)
  z)

; set-cdr! mutator procedure
(define (set-cdr! z new-value)
  ((z 'set-cdr!) new-value)
  z)

;
;           ┌──────────────────────────────────────────────────────────┐
;           │               car: ─────────┐   set-car!:─────────┐      │
; global -->│ cons: ─┐      cdr: ─┐       │   set-cdr!:─┐       │      │
;  env      └────────┼────────────┼───────┼─────────────┼───────┼──────┘
;              ┌─────┘ Λ          │ Λ     │ Λ           │ Λ     │ Λ
;              V       │          │ │     │ │           │ │     │ │
;     ┌───────ꙨꙨ───────┘          │ │  ┌─ꙨꙨ─┘           │ │  ┌─ꙨꙨ─┘
;     V                           │ │  V                │ │  V
; params: x y                     │ │ params: z         │ │ params: z new-value
; body: (define (set-x! v) ...)   │ │ body: (z 'car)    │ │ body: ((z 'set-car!)
;       (define (set-y! v) ...)   │ │                   V │        new-value)
;       (define (dispatch m) ...) │ │                ┌─ꙨꙨ─┘       z
;       dispatch                  V │                V
;                              ┌─ꙨꙨ─┘               params: z new-value
;                              V                    body: ((z 'set-cdr!)
;                             params: z                    new-value)
;                             body: (z 'cdr)              z
;

(define x (cons 1 2))

;
;           ┌─────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...             │
; global -->│ car: ...      set-cdr!: ...             │
;  env      │ cdr: ...      x: ─┐                     │
;           └───────────────────┼─────────────────────┘
;                       ┌───────┘         Λ
;                       │        ┌────────┴──────┐
;                       │        │ x: 1          │<─────────────────┐
;                       │        │ y: 2      ┌───┼────────────────┐ │
;                       │   E1 ->│ set-x!: ──┘   │<────────┐      V │
;                       │        │ set-y!: ──────┼───────┐ │   ┌─ꙨꙨ─┘
;                       │        │ dispatch: ─┐  │       │ │   V
;                       │        └────────────┼──┘       V │ params: v
;                       └────┐┌───────────────┘ Λ     ┌─ꙨꙨ─┘ body: (set! x v)
;                            VV                 │     V
;                  ┌─────────ꙨꙨ─────────────────┘   params: v
;                  V                                body: (set! y v)
;                 params: m
;                 body: (cond ((eq? m 'car) x)
;                             ((eq? m 'cdr) y)
;                             ((eq? m 'set-car!) set-x!)
;                             ((eq? m 'set-cdr!) set-y!)
;                             (else (error "Undefined operation -- CONS" m)))
;

(define z (cons x x))

;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;                       ┌───────┘      Λ        │              Λ
;                       │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;                       │     │ x: 1          │ │     │ x: ──────────────┐  │
;                       │     │ y: 2          │ │     │ y: ────────────┐ │  │
;                       │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;                       │     │ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;                       │     │ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;                       │     └────────────┼──┘ │     └────────────┼───┼─┼──┘
;                       └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │
;                                  VV        │             VV        │ │ │
;                             ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │
;                             │    ΛΛ                 │                │ │
;                             │    │└─────────────────┼────────────────┘ │
;                             │    └──────────────────┼──────────────────┘
;                             │ ┌─────────────────────┘
;                             V V
;                            params: m
;                            body: (cond ...)
;

(set-car! (cdr z) 17)

;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;             Λ         ┌───────┘      Λ        │              Λ
;       ┌─────┴─────┐   │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;  E3 ->│ z: ─────┐ │   │     │ x: 1          │ │     │ x: ──────────────┐  │
;       └─────────┼─┘   │     │ y: 2          │ │     │ y: ────────────┐ │  │
;        (z 'cdr) │     │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;                 │     │     │ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;                 │     │     │ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;                 │     │     └────────────┼──┘ │     └────────────┼───┼─┼──┘
;                 │     └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │
;                 │                VV        │             VV        │ │ │
;                 │           ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │
;                 │           │    ΛΛ                 │    Λ           │ │
;                 │           │    │└─────────────────┼────┼───────────┘ │
;                 │           │    └──────────────────┼────┼─────────────┘
;                 └───────────┼───────────────────────┼────┘
;                             │ ┌─────────────────────┘
;                             V V
;                            params: m
;                            body: (cond ...)
;
;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;             Λ         ┌───────┘      Λ        │              Λ
;       ┌─────┴─────┐   │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;  E3 ->│ z: ─────┐ │   │     │ x: 1          │ │     │ x: ──────────────┐  │
;       └─────────┼─┘   │     │ y: 2          │ │     │ y: ────────────┐ │  │
;        (z 'cdr) │     │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;                 │     │     │ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;                 │     │     │ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;                 │     │     └────────────┼──┘ │     └────────────┼───┼─┼──┘
;                 │     └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │ Λ
;                 │                VV        │             VV        │ │ │ │
;                 │           ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │ │
;                 │           │    ΛΛ                 │    Λ           │ │ │
;                 │           │    │└─────────────────┼────┼───────────┘ │ │
;                 │           │    └──────────────────┼────┼─────────────┘ │
;                 └───────────┼───────────────────────┼────┘               │
;                             │ ┌─────────────────────┘        ┌───────────┘
;                             V V                         ┌────┴────┐
;                            params: m               E4 ->│ m: 'cdr │
;                            body: (cond ...)             └─────────┘
;                                                          (cond ...)
;
;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;             Λ       Λ ┌───────┘      Λ        │              Λ
;       ┌─────┴─────┐ │ │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;  E3 ->│ z: ─────┐ │ │ │     │ x: 1          │ │     │ x: ──────────────┐  │
;       └─────────┼─┘ │ │     │ y: 2          │ │     │ y: ────────────┐ │  │
;        (z 'cdr) │   │ │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;                 │   │ │     │ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;                 │   │ │     │ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;                 │   │ │     └────────────┼──┘ │     └────────────┼───┼─┼──┘
;                 │   │ └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │ Λ
;                 │   │   ┌───────┐││        │             ││        │ │ │ │
;                 │   │   │       VVV        │             VV        │ │ │ │
;                 │   │   │   ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │ │
;                 │   │   │   │    ΛΛ                 │    Λ           │ │ │
;                 │   │   │   │    │└─────────────────┼────┼───────────┘ │ │
;            E5   │   │   │   │    └──────────────────┼────┼─────────────┘ │
;             │   └───┼───┼───┼───────────────────────┼────┘               │
;             V       │   │   │ ┌─────────────────────┘        ┌───────────┘
;       ┌─────────────┴─┐ │   V V                         ┌────┴────┐
;       │ z: ───────────┼─┘  params: m               E4 ->│ m: 'cdr │
;       │ new-value: 17 │    body: (cond ...)             └─────────┘
;       └───────────────┘                                  (cond ...)
;       ((z 'set-car!) new-value)
;       z
;
;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;             Λ       Λ ┌───────┘      Λ        │              Λ
;       ┌─────┴─────┐ │ │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;  E3 ->│ z: ─────┐ │ │ │     │ x: 1          │ │     │ x: ──────────────┐  │
;       └─────────┼─┘ │ │     │ y: 2          │ │     │ y: ────────────┐ │  │
;        (z 'cdr) │   │ │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;                 │   │ │     │ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;   ┌─────────────┼───┼─┼────>│ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;   │ ┌───────────┼───┼─┼────>└────────────┼──┘ │     └────────────┼───┼─┼──┘
;   │ │           │   │ └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │ Λ
;   │ │           │   │   ┌───────┐││        │             ││        │ │ │ │
;   │ │           │   │   │       VVV        │             VV        │ │ │ │
;   │ │           │   │   │   ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │ │
;   │ │           │   │   │   │    ΛΛ                 │    Λ           │ │ │
;   │ │           │   │   │   │    │└─────────────────┼────┼───────────┘ │ │
;   │ │      E5   │   │   │   │    └──────────────────┼────┼─────────────┘ │
;   │ │       │   └───┼───┼───┼───────────────────────┼────┘               │
;   │ │       V       │   │   │ ┌─────────────────────┘        ┌───────────┘
;   │ │ ┌─────────────┴─┐ │   V V                         ┌────┴────┐
;   │ │ │ z: ───────────┼─┘  params: m               E4 ->│ m: 'cdr │
;   │ │ │ new-value: 17 │    body: (cond ...)             └─────────┘
;   │ │ └───────────────┘                                  (cond ...)
;   │ │ ((z 'set-car!) new-value)
;   │ │ z
;   │ └─────────────────────────────────┐
;   │                            ┌──────┴───────┐
;   │                       E6 ->│ m: 'set-car! │
;   │                            └──────────────┘
;   │                               (cond ...)
;   └────────────────────────────────┐
;                                ┌───┴───┐
;                           E7 ->│ v: 17 │
;                                └───────┘
;                                (set! y v)
;
;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;                       ┌───────┘      Λ        │              Λ
;                       │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;                       │     │ x: 17         │ │     │ x: ──────────────┐  │
;                       │     │ y: 2          │ │     │ y: ────────────┐ │  │
;                       │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;                       │     │ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;                       │     │ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;                       │     └────────────┼──┘ │     └────────────┼───┼─┼──┘
;                       └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │
;                                  VV        │             VV        │ │ │
;                             ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │
;                             │    ΛΛ                 │                │ │
;                             │    │└─────────────────┼────────────────┘ │
;                             │    └──────────────────┼──────────────────┘
;                             │ ┌─────────────────────┘
;                             V V
;                            params: m
;                            body: (cond ...)
;

(car x)

;
;           ┌──────────────────────────────────────────────────────┐
;           │ cons: ...     set-car!: ...   set-car!: ...          │
; global -->│ car: ...      set-cdr!: ...   set-cdr!: ...          │
;  env      │ cdr: ...      x: ─┐           z: ─┐                  │
;           └───────────────────┼───────────────┼──────────────────┘
;             Λ         ┌───────┘      Λ        │              Λ
;       ┌─────┴─────┐   │     ┌────────┴──────┐ │     ┌────────┴────────────┐
;  E8 ->│ z: ─────┐ │   │     │ x: 17         │ │     │ x: ──────────────┐  │
;       └─────────┼─┘   │     │ y: 2          │ │     │ y: ────────────┐ │  │
;        (z 'car) │     │E1 ->│ set-x!: ...   │ │E2 ->│ set-x!: ...    │ │  │
;             ┌───┼─────┼────>│ set-y!: ...   │ │     │ set-y!: ...    │ │  │
;             │   │     │     │ dispatch: ─┐  │ │     │ dispatch: ─┐   │ │  │
;             │   │     │     └────────────┼──┘ │     └────────────┼───┼─┼──┘
;             │   │     └──────────┐┌──────┘ Λ  └──────────┐┌──────┘ Λ │ │
;             │   └───────────────┐││        │             ││        │ │ │
;       ┌─────┴───┐               VVV        │             VV        │ │ │
;  E9 ->│ m: 'car │           ┌────ꙨꙨ────────┘        ┌────ꙨꙨ────────┘ │ │
;       └─────────┘           │    ΛΛ                 │                │ │
;           x                 │    │└─────────────────┼────────────────┘ │
;                             │    └──────────────────┼──────────────────┘
;                             │ ┌─────────────────────┘
;                             V V
;                            params: m
;                            body: (cond ...)
;
; ==> 17
;
