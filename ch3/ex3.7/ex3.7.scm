(define (make-account balance password)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (dispatch p m)
    (cond ((not (eq? p password)) (lambda (x) "Incorrect password"))
          ((eq? m 'withdraw) withdraw)
          ((eq? m 'deposit) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m))))
  dispatch)

(define (make-joint acc p1 p2)
  (define (dispatch p m)
    (if (not (eq? p p2))
        (lambda (x) "Incorrect password")
        (acc p1 m)))
  dispatch)

; unit tests
(define acct (make-account 100 'foo))
(define alias (make-joint acct 'foo 'bar))
((acct 'foo 'deposit) 0)
((alias 'bar 'deposit) 0)
((acct 'foo 'withdraw) 15)
((alias 'bar 'withdraw) 0)
((alias 'bar 'deposit) 42)
((acct 'foo 'deposit) 0)
((acct 'bar 'baz) 0)
((acct 'foo 'qux) 0)
(restart 1)
((alias 'foo 'quux) 0)
((alias 'bar 'corge) 0)
(restart 1)
