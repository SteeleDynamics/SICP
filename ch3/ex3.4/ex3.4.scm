; make-account procedure
(define (make-account balance password)
  (define attempts 0)
  (define (withdraw amount)
    (if (>= balance amount)
        (begin (set! balance (- balance amount))
               balance)
        "Insufficient funds"))
  (define (deposit amount)
    (set! balance (+ balance amount))
    balance)
  (define (incorrect-password x)
    (set! attempts (+ attempts 1))
    (if (< attempts 7)
        "Incorrect password"
        (call-the-cops)))
  (define (call-the-cops) "Calling the police...")
  (define (dispatch p m)
    (cond ((not (eq? p password)) incorrect-password)
          ((eq? m 'withdraw) (set! attempts 0) withdraw)
          ((eq? m 'deposit) (set! attempts 0) deposit)
          (else (error "Unknown request -- MAKE-ACCOUNT"
                       m))))
  dispatch)

; unit tests
(define acc (make-account 100 'foo))
((acc 'bar 'withdraw) 40)
((acc 'baz 'deposit) 50)
((acc 'foo 'withdraw) 30)
((acc 'qux 'deposit) 1)
((acc 'quux 'deposit) 1)
((acc 'corge 'deposit) 1)
((acc 'grault 'deposit) 1)
((acc 'garply 'deposit) 1)
((acc 'waldo 'deposit) 1)
((acc 'fred 'deposit) 1)
((acc 'plugh 'withdraw) 13)
((acc 'foo 'withdraw) 13)
((acc 'xyzzy 'deposit) 3)
((acc 'thud 'deposit) 3)
