MIT/GNU Scheme running under GNU/Linux
Type `^C' (control-C) followed by `H' to obtain information about interrupts.

Copyright (C) 2020 Massachusetts Institute of Technology
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Image saved on Sunday March 7, 2021 at 3:24:56 PM
  Release 11.2 || SF || LIAR/x86-64

1 ]=> ; equal? predicate procedure
(define (equal? seq1 seq2)
  (cond ((and (null? seq1) (null? seq2)) true)
        ((and (not (pair? seq1)) (not (pair? seq2)))
         (eq? seq1 seq2))
        ((and (pair? seq1) (pair? seq2))
         (and (equal? (car seq1) (car seq2))
              (equal? (cdr seq1) (cdr seq2))))
        (else false)))
;Value: equal?

1 ]=> (equal? '(this is a list) '(this is a list))
;Value: #t

1 ]=> (equal? '(this is a list) '(this (is a) list))
;Value: #f

1 ]=> (equal? '(this (is ()) (a tree)) '(this (is ()) (a tree)))
;Value: #t

1 ]=> (equal? '(this (is ()) ((a) tree)) '(this (is ()) (a tree)))
;Value: #f

1 ]=> (equal? '((()()(()((())))()(()))()(())) '((()()(()((())))()(()))()(())))
;Value: #t

1 ]=> (equal? '((()()(()((())))()(()))()(())) '((()()(()(()))()(()))()(())))
;Value: #f

1 ]=> 
End of input stream reached.
..#]^@^@^@ NO CARRIER
