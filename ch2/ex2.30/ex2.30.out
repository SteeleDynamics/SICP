MIT/GNU Scheme running under GNU/Linux
Type `^C' (control-C) followed by `H' to obtain information about interrupts.

Copyright (C) 2020 Massachusetts Institute of Technology
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Image saved on Sunday March 7, 2021 at 3:24:56 PM
  Release 11.2 || SF || LIAR/x86-64

1 ]=> (define nil '())
;Value: nil

1 ]=> (define (scale-tree tree factor)
  (map (lambda (sub-tree)
         (if (pair? sub-tree)
             (scale-tree sub-tree factor)
             (* sub-tree factor)))
       tree))
;Value: scale-tree

1 ]=> (define (square-tree1 tree)
  (cond ((null? tree) nil)
        ((not (pair? tree)) (square tree))
        (else (cons (square-tree1 (car tree))
                    (square-tree1 (cdr tree))))))
;Value: square-tree1

1 ]=> (square-tree1
 (list 1
       (list 2 (list 3 4) 5)
       (list 6 7)))
;Value: (1 (4 (9 16) 25) (36 49))

1 ]=> (define (square-tree2 tree)
  (map (lambda (sub-tree)
         (if (pair? sub-tree)
             (square-tree2 sub-tree)
             (square sub-tree)))
       tree))
;Value: square-tree2

1 ]=> (square-tree2
 (list 1
       (list 2 (list 3 4) 5)
       (list 6 7)))
;Value: (1 (4 (9 16) 25) (36 49))

1 ]=> 
End of input stream reached.
Fortitudine vincimus.
