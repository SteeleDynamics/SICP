MIT/GNU Scheme running under GNU/Linux
Type `^C' (control-C) followed by `H' to obtain information about interrupts.

Copyright (C) 2020 Massachusetts Institute of Technology
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Image saved on Sunday March 7, 2021 at 3:24:56 PM
  Release 11.2 || SF || LIAR/x86-64

1 ]=> ; make-vect procedure
(define (make-vect x y)
  (list x y))
;Value: make-vect

1 ]=> ; xcor-vect procedure
(define (xcor-vect v)
  (car v))
;Value: xcor-vect

1 ]=> ; ycor-vect procedure
(define (ycor-vect v)
  (cadr v))
;Value: ycor-vect

1 ]=> ; add-vect procedure
(define (add-vect v1 v2)
  (make-vect (+ (xcor-vect v1) (xcor-vect v2))
             (+ (ycor-vect v2) (ycor-vect v2))))
;Value: add-vect

1 ]=> ; sub-vect procedure
(define (sub-vect v1 v2)
  (make-vect (- (xcor-vect v1) (xcor-vect v2))
             (- (ycor-vect v1) (ycor-vect v2))))
;Value: sub-vect

1 ]=> ; scale-vect procedure
(define (scale-vect s v)
  (make-vect (* s (xcor-vect v))
             (* s (ycor-vect v))))
;Value: scale-vect

1 ]=> 
End of input stream reached.
Post proelium, praemium.
