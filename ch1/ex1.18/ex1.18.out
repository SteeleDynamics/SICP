MIT/GNU Scheme running under GNU/Linux
Type `^C' (control-C) followed by `H' to obtain information about interrupts.

Copyright (C) 2020 Massachusetts Institute of Technology
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

Image saved on Sunday March 7, 2021 at 3:24:56 PM
  Release 11.2 || SF || LIAR/x86-64

1 ]=> (define (even? n)
  (= (remainder n 2) 0))
;Value: even?

1 ]=> (define (double a) (* a 2))
;Value: double

1 ]=> (define (halve a) (/ a 2))
;Value: halve

1 ]=> ;
; invariant quantity: acc + (a * b)
(define (fast-mult-iter a b acc)
  (cond ((= b 0) acc)
         ((even? b) (fast-mult-iter (double a) (halve b) acc))
         (else (fast-mult-iter a (- b 1) (+ acc a)))))
;Value: fast-mult-iter

1 ]=> ;
; (fast-mult-iter 3 7 0)
; (fast-mult-iter 3 6 3)
; (fast-mult-iter 6 3 3)
; (fast-mult-iter 6 2 9)
; (fast-mult-iter 12 1 9)
; (fast-mult-iter 12 0 21)
; 21

(fast-mult-iter 3 7 0)
;Value: 21

1 ]=> 
End of input stream reached.
Post proelium, praemium.
